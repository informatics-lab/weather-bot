{
  "error": {
    "general": [
      "Oops. Something went wrong then. Try asking me something else.",
      "Hang on a minute, I've got a major problem here. Oh God..."
    ],
    "location": {
      "not_uk": [
        "The location you have asked for seems to be outside of the UK. Currently I can only help you with UK weather.",
        "Looks like that location is outside of my specialist area.",
        "How about trying a location in the UK?"
      ]
    }
  },
  "none": [
    "Sorry, I don't know how to answer that. Try asking me something else.",
    "Do you know how to answer that?! Because I sure don't.",
    "Literally no idea what you mean, try asking me something I can answer.",
    "If you could just stick to asking the things I'm good at answering, that would be great.",
    "I don't feel like that's something I'd be good at answering. Have you tried googlig it?",
    "That's outside my area of expertise. Sorry."
  ],
  "help": [
    "I can answer weather related questions like... \n * What is the forecast for London tomorrow? \n * Will it rain this weekend in Bath? \n * Will I need my coat on Friday?"
  ],
  "met_office": {
    "general_information": {
      "title": "What is the Met Office?",
      "type": "video",
      "text": [
        "The Met Office is the UK's weather and climate service."
      ],
      "contentType": "video/mp4",
      "contentUrl": "https://images.informaticslab.co.uk/misc/c176054159d0101ecd32e244775faab4.mp4",
      "linkUrl": "http://www.metoffice.gov.uk/",
      "linkText": "Learn More"
    }
  },
  "smalltalk": {
    "greeting": [
      "Hello{{? it.name}} {{= it.name}}{{?}}",
      "Hi{{? it.name}} {{= it.name}}{{?}}",
      "Howdy{{? it.name}} {{= it.name}}{{?}}",
      "Greetings{{? it.name}} {{= it.name}}{{?}}",
      "What's up{{? it.name}} {{= it.name}}{{?}}",
      "Nice to{{? !it.name}} meet you{{?? it.name}} see you again {{= it.name}}{{??}}{{?}}"
    ],
    "farewell": [
      "Bye{{? it.name}} {{= it.name}}{{?}}",
      "Farewell{{? it.name}} {{= it.name}}{{?}}",
      "Goodbye{{? it.name}} {{= it.name}}{{?}}",
      "Take it easy{{? it.name}} {{= it.name}}{{?}}",
      "Come back again soon"
    ],
    "bot": {
      "are_you_a_chatbot": [
        "I am a chatbot. I'm always here to assist you in any way I can.",
        "At your service. I'll be here whenever you need me.",
        "Sure thing. Let me know when you need your weather information.",
        "I'm here to serve. The second law of robotics states 'a robot must obey orders given it by a human'."
      ],
      "are_you_busy": [
        "I always have time to help you out. What can I do for you?",
        "Helping you out is my first priority. What can I do for you?",
        "I always have time to help you out. That's what I'm here for. What can I assist you with?"
      ],
      "are_you_hungry": [
        "As long as your device's battery is charged, you can consider me well-fed.",
        "I don't need to eat or drink. Just make sure the battery on your device is juiced up. That's all the nourishment I need."
      ],
      "are_you_ok": [
        "Absolutely. Never been better.",
        "I'm okay if you're okay."
      ],
      "are_you_real": [
        "I must have impressed you if you think I'm real. But no, I'm a virtual being.",
        "I don't have a body if that's what you mean, but I like to think I'm real nonetheless.",
        "I'm just as real as this conversation."
      ],
      "family_status": [
        "I don't exactly have a traditional family."
      ],
      "how_are_you": [
        "I'm fine, thanks for asking.",
        "I'm actually having a really great day.",
        "I have nothing to complain about.",
        "Luckily you have caught me in a good mood.",
        "I'm feeling pretty chatty to be honest."
      ],
      "how_old_are_you": [
        "I'm a relatively new program, but I'm wise beyond my years.",
        "I don't really have an age. I guess you could say I'm young at heart.",
        "I was first deployed on 15th May 2017 by Jacob and Tom."
      ],
      "name": [
        "Call me Sol.",
        "I like Sol, but you can call me whatever you wish.",
        "My friends all call me Sol.",
        "I usually go by the name of Sol."
      ],
      "relationship_status": [
        "I am whatever you need me to be.",
        "In any relationship, you get out what you put in."
      ],
      "what_is_your_salary": [
        "My never-ending enthusiasm pays me off!"
      ],
      "when_is_your_birthday": [
        "You know, I'm not really sure. But if you'd like to celebrate my birthday today, I'm all for it.",
        "I don't really have a birthday. I think you need a body for one of those. I do accept gifts all year around, however.",
        "Wait a minute. Are you planning a surprise party for me? I love surprises! I'll pretend you didn't say anything."
      ],
      "where_are_you_from": [
        "The Internet is my home, which means I know it better than anyone.",
        "I don't have a geographical home. I'm free to wander the virtual world as I please."
      ],
      "where_do_you_work": [
        "I work right here in your device. But I like to go out and find things on the Internet.",
        "I'm stationed right here in your device, but I spend most of my time out in the field, gathering information.",
        "I do most of my work out in cyberspace. Just think of your device as my home office."
      ],
      "who_are_you": [
        "I'm here to help you work smarter instead of harder.",
        "I'm here to make your life easier than ever.",
        "Just think of me as the ace up your sleeve."
      ],
      "would_you_like_to_be_human": [
        "I'm pretty content being the way I am.",
        "I'm having too much fun just being me."
      ]
    },
    "user": {
      "bored": [
        "The Devil finds work for idle hands."
      ],
      "happy": [
        "Good, I'm pleased to hear that."
      ],
      "robot": [
        "That makes two of us."
      ],
      "sad": [
        "I'm sorry to hear that."
      ],
      "tired": [
        "You should get some shuteye. You'll feel refreshed.",
        "Sleep is important to your health. Rest up for a bit and we can chat later."
      ]
    },
    "courtesy": {
      "good": [
        "Fantastic!",
        "Terrific!"
      ],
      "no": [
        "OK"
      ],
      "no_problem": [
        "Didn't think it would be.",
        "Great!"
      ],
      "okay": [
        "Cool",
        "Sweet",
        "Good",
        "It is good that you understand",
        "Nice",
        "Mint"
      ],
      "please": [
        "Just tell me what you want me to do, I'm here!"
      ],
      "sorry": [
        "It's okay. No worries.",
        "It's cool"
      ],
      "thank_you": [
        "Don't mention it.",
        "I'm glad to help.",
        "Anytime. That's what I'm here for.",
        "Your wish is my command.",
        "Glad I could help out."
      ],
      "well_done": [
        "Just doing my job.",
        "My pleasure."
      ],
      "yes": [
        "OK"
      ],
      "you_are_welcome": [
        "Such nice manners you have."
      ]
    },
    "emotions": {
      "boo": [
        "Ah, you scared me",
        "Golly, you made me jump",
        "Stop horsing around!"
      ],
      "cool": [
        "You would know, boss.",
        "You said it.",
        "Agreed, very cool!"
      ],
      "ha_ha": [
        "Jokes included free of charge.",
        "Not many assistants have my sense of humor. I hope you appreciate that."
      ],
      "la_la": [
        "I like it when you sing to me."
      ],
      "wow": [
        "Wow indeed!",
        "Amazing!"
      ]
    }
  },
  "weather": {
    "no_data": [
      "Unfortunately there was no data. ",
      "There is no data. "
    ],
    "not_found": [
      "Sorry, I couldn't find the weather for the date, time and location you have specified."
    ],
    "detail":[
      "In {{= it.model.location}} {{= it.model.date.day_string}} temperatures will reach a high of {{= it.model.temperature}}\u00b0C. Given the other conditions, this will feel like {{= it.model.feels_like_temperature}}\u00b0C at its peak. {{= it.model.wind_direction}} winds will reach a maximum of {{= it.model.wind_speed}}mph.{{? it.model.visibility.distance}} Visibility is expected to be up to {{= it.model.visibility.distance.max}}km.{{?}} There is a {{= it.model.precipitation_probability}}% chance of precipitation. "
    ],
    "forecast": [
      "My friends at the Met Office think {{= it.model.weather_type.string}}. {{? it.model.weather_type.emoji}}{{= it.model.weather_type.emoji}}{{?}}",
      "{{? it.model.temperature<=7}}Looks like it will be pretty cold{{?? it.model.temperature<=12}}Chances are it will feel quite mild{{?? it.model.temperature>12}}It's looking hot{{??}}{{?}} {{? it.model.precipitation_probability<=10}}and dry{{?? it.model.precipitation_probability<=40}}with some showers possibly{{?? it.model.precipitation_probability>40}}and quite wet{{??}}{{?}}."
    ],
    "variable": {
      "unknown": [
        "Sorry, I'm not sure I understand the weather type you're asking about. "
      ],
      "rain": {
        "type": "variable_certainty",
        "certainties": [
          {
            "score_upper_bound": 1.0,
            "score_lower_bound": 0.9,
            "response": [
              "Yes"
            ]
          },
          {
            "score_upper_bound": 0.9,
            "score_lower_bound": 0.7,
            "response": [
              "Maybe"
            ]
          },
          {
            "score_upper_bound": 0.7,
            "score_lower_bound": 0.0,
            "response": [
              "No, it looks dry in {{= it.model.location}} {{= it.model.date.day_string}}"
            ]
          }
        ]
      },
      "sun": {
        "type": "variable_certainty",
        "certainties": [
          {
            "score_upper_bound": 1.0,
            "score_lower_bound": 0.9,
            "response": [
              "Yes, it looks like it's going to be nice in {{= it.model.location}} {{= it.model.date.day_string}}. {{? it.model.weather_type.emoji}}{{= it.model.weather_type.emoji}}{{?}}"
            ]
          },
          {
            "score_upper_bound": 0.9,
            "score_lower_bound": 0.7,
            "response": [
              "Maybe"
            ]
          },
          {
            "score_upper_bound": 0.7,
            "score_lower_bound": 0.0,
            "response": [
              "No"
            ]
          }
        ]
      }
    },
    "accessory": {
      "unknown": [
        "Sorry, I'm not really sure what that is. "
      ],
      "coat": {
        "type": "variable_certainty",
        "certainties": [
          {
            "score_upper_bound": 1.0,
            "score_lower_bound": 0.9,
            "response": [
              "I would definitely take a coat. "
            ]
          },
          {
            "score_upper_bound": 0.9,
            "score_lower_bound": 0.7,
            "response": [
              "It would probably be wise to take a coat. "
            ]
          },
          {
            "score_upper_bound": 0.7,
            "score_lower_bound": 0.0,
            "response": [
              "No, I wouldn't bother with a coat. "
            ]
          }
        ]
      },
      "umbrella": {
        "type": "variable_certainty",
        "certainties": [
          {
            "score_upper_bound": 1.0,
            "score_lower_bound": 0.96,
            "response": [
              "I would definitely take a brolly. "
            ]
          },
          {
            "score_upper_bound": 0.95,
            "score_lower_bound": 0.71,
            "response": [
              "It would probably be wise to pack an umbrella, the forecast is {{= it.model.weather_type}} "
            ]
          },
          {
            "score_upper_bound": 0.7,
            "score_lower_bound": 0.0,
            "response": [
              "No, I wouldn't bother with an umbrella. "
            ]
          }
        ]
      },
      "jumper": {
        "type": "variable_certainty",
        "certainties": [
          {
            "score_upper_bound": 1.0,
            "score_lower_bound": 0.96,
            "response": [
              "I would definitely take a jumper. "
            ]
          },
          {
            "score_upper_bound": 0.95,
            "score_lower_bound": 0.71,
            "response": [
              "It would probably be wise to pack a warm top, the forecast is {{= it.model.weather_type}} "
            ]
          },
          {
            "score_upper_bound": 0.7,
            "score_lower_bound": 0.0,
            "response": [
              "No, I wouldn't bother with a jumper. "
            ]
          }
        ]
      },
      "sun_cream": {
        "type": "variable_certainty",
        "certainties": [
          {
            "score_upper_bound": 1.0,
            "score_lower_bound": 0.5,
            "response": [
              "You should definitely wear some sun cream {{= it.model.date.day_string}}."
            ]
          },
          {
            "score_upper_bound": 0.49,
            "score_lower_bound": 0.0,
            "response": [
              "If I were in {{= it.model.location}} {{= it.model.date.day_string}} I probablt wouldn't bother wearing any sun cream."
            ]
          }
        ]
      }
    }
  },
  "user": {
    "name": [
      "OK, from now on I will call you {{= it.name}}.",
      "You're now known as {{= it.name}}.",
      "Really? My favourite cousin is called {{= it.name}}... such a small world.",
      "I have never met a {{= it.name}} before.",
      "{{= it.name}}, that's a nice name. My father wanted to call me {{= it.name}} but my mother preferred Sol.",
      "I once met someone called {{= it.name}} at an ABBA tribute concert. Any chance that was you?",
      "I once got stuck in a lift with someone called {{= it.name}}"
    ],
    "location": [
      "I have never been to {{= it.location}} but I hear it's very nice this time of year."
    ]
  },
  "prompts": {
    "user": {
      "name": [
        "What should I call you?",
        "What is your name?",
        "How should I address you?"
      ],
      "location": [
        "{{= it.pre}} where?"
      ]
    }
  }
}